name: CI Pipeline

# Bu workflow, push ve pull request olduğunda çalışır
# This workflow runs on every push or pull request
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Ortam değişkenleri (pnpm ve Node sürümü için)
env:
  NODE_VERSION: 18
  PNPM_VERSION: 8

jobs:
  install-and-test:
    name: Install & Lint & Test
    runs-on: ubuntu-latest

    steps:
      # Kaynak kodu checkout yap
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Node.js kurulumu
      # Set up Node.js
      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      # pnpm kurulumu
      # Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm@${{ env.PNPM_VERSION }}

      # Bağımlılıkları yükle
      # Install dependencies
      - name: Install dependencies with pnpm
        run: pnpm install

      # Nx cache restore (performans için)
      # Restore Nx computation cache
      - name: Restore Nx cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      # Kod kalitesi denetimi
      # Lint the codebase
      - name: Lint
        run: pnpm nx format:check && pnpm nx affected:lint --all

      # Testleri çalıştır (unit/integration)
      # Run tests (unit/integration)
      - name: Run Tests
        run: pnpm nx run-many --target=test --all --parallel=3

      # Projeleri derle
      # Build all apps/libs (for deploy sanity)
      - name: Build apps and libs
        run: pnpm nx run-many --target=build --all --parallel=3
